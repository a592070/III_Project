#log4j.rootLogger=DEBUG,console,file

#控制台輸出：
#log4j.rootLogger = console
#log4j.appender.console=org.apache.log4j.ConsoleAppender
#log4j.appender.console.Target=System.out
#log4j.appender.console.Threshold=DEBUG
#log4j.appender.console.layout=org.apache.log4j.PatternLayout
#log4j.appender.console.layout.ConversionPattern=[%c]-%m%n


#文件輸出：RollingFileAppender
#log4j.rootLogger = file
#log4j.appender.file=org.apache.log4j.RollingFileAppender
#log4j.appender.file.File=./log/spring.log
#log4j.appender.file.MaxFileSize = 10MB
#log4j.appender.file.Threshold=DEBUG
#log4j.appender.file.layout=org.apache.log4j.PatternLayout
#log4j.appender.file.layout.ConversionPattern=[%p][%d{yyyy-MM-dd HH:mm}][%c]%m%n
# %c 輸出日誌訊息所屬的類別的全名
# %d 輸出日誌時間點的日期或時間，指定格式的方式：%d{yyy-MM-dd HH:mm:ss }。
# %l 輸出日誌事件的發生位置，即輸出日誌訊息的語句處於它所在的類別的第幾行。相當於%c.%M(%F:%L)的組合包括類別全名、method、檔案名以及行數例如：test.TestLog4j.main(TestLog4j.java:10)
# %m 輸出的訊息，如log(message)中的message。
# %n 輸出一個換行符號。
# %p 輸出優先階層，即DEBUG，INFO，WARN，ERROR，FATAL。如果是調用debug()輸出的，則為DEBUG，依此類推。
# %r 輸出自應用啟動到輸出該日誌訊息所耗費的毫秒數。
# %t 輸出產生該日誌事件的執行緒名。
# %r 輸出自應用啟動到輸出該日誌訊息所耗費的毫秒數。
# %f 輸出日誌訊息所屬的類別的類別名。
# %M 輸出產生日誌的方法名。
# %F 輸出日誌時所在的檔案名稱。
# %L 輸出行號。
# %x 輸出和當前執行緒相關聯的NDC(嵌套診斷環境)，尤其用到像java servlets這樣的多客戶多執行緒的應用中。
# %% 輸出一個"%"字符。


#日誌輸出級別
#mybatis
#log4j.logger.org.mybatis=DEBUG
#log4j.logger.java.sql=DEBUG
#log4j.logger.java.sql.Statement=DEBUG
#log4j.logger.java.sql.ResultSet=DEBUG
#log4j.logger.java.sql.PreparedStatement=DEBUG

#hibernate
log4j.logger.org.hibernate=INFO,hb
#將此參數由debug更改為其他層級。假設改成INFO 僅會出現WARN、ERROR、FATAL。 log4j的訊息層級由上至下為 TRACE、DEBUG、INFO、WARN、ERROR、FATAL。
log4j.logger.org.hibernate.SQL=DEBUG
#log4j.logger.org.hibernate.type=ERROR
log4j.logger.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
log4j.logger.org.hibernate.engine.transaction.internal.TransactionImpl=TRACE
#log4j.logger.org.hibernate.tool.hbm2ddl=DEBUG
#log4j.logger.org.springframework.transaction.interceptor=TRACE,hb
#log4j.logger.org.springframework.orm.hibernate5.HibernateTransactionManager=DEBUG,hb

log4j.appender.hb=org.apache.log4j.ConsoleAppender
log4j.appender.hb.layout=org.apache.log4j.PatternLayout
log4j.appender.hb.layout.ConversionPattern=HibernateLog --> %d{HH:mm:ss} [%p] [%c] - %m%n
#log4j.appender.hb.Threshold=TRACE